
import java.io.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import ljmu.vets.*;

public class Sys {
    private final String PATH = "M:\\data\\OOSyS\\";
    private final Scanner S = new Scanner(System.in);
    private final List<Surgery> surgeries = new ArrayList<>();
    private Surgery surgery;

    public Sys() {
        deSerialize();
    }

    public void entryMenu() {
        String choice;
        do {
            System.out.println("-- ENTRY MENU --");
            System.out.println("1 : [L]ogOn");
            System.out.println("Q : Quit");
            System.out.print("Pick : ");
            choice = S.nextLine().toUpperCase();
            switch (choice) {
                case "1":
                case "L":
                    logOn();
                    break;
            }
        } while (!choice.equals("Q"));
        serialize();
        System.out.println("Bye Bye !");
        System.exit(0);
    }

    private void deSerialize() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(PATH + "surgeries.ser"))) {
            surgeries.addAll((List<Surgery>) ois.readObject());
        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }

    private void serialize() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(PATH + "surgeries.ser"))) {
            oos.writeObject(surgeries);
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }

    private void logOn() {
        surgery = surgeries.get(0);
        surgeryMenu();
    }

    private void surgeryMenu() {
        String choice;
        do {
            System.out.println("-- " + surgery.toString() + "'s SURGERY MENU --");
            System.out.println("1 : makePet");
            System.out.println("2 : getPetByName");
            System.out.println("3 : makeBooking");
            System.out.println("4 : getPetsNextBooking");
            System.out.println("5 : ToDo");
            System.out.println("Q : Quit");
            System.out.print("Pick : ");
            choice = S.nextLine().toUpperCase();
            switch (choice) {
                case "1":
                    makePet();
                    break;
                case "2":
                    getPetByName();
                    break;
                case "3":
                    makeBooking();
                    break;
                case "4":
                    getPetsNextBooking();
                    break;
                case "5":
                    // ToDo : ?
                    break;
            }
        } while (!choice.equals("Q"));
        surgery = null; // Logging Out
    }

    private void makePet() {
        System.out.print("Pet's Name : ");
        String name = S.nextLine();
        System.out.print("Pet's RegDate [i.e. 03 Oct 23] : ");
        LocalDate regDate = LocalDate.parse(S.nextLine(), DateTimeFormatter.ofPattern("dd MMM yy"));
        surgery.makePet(new Fish(name, regDate, WaterType.FRESH)); // Always Fresh Fish!
    }

    private void getPetByName() {
        System.out.print("Pet's Name : ");
        String name = S.nextLine();
        System.out.println(surgery.getPetByName(name).toString()); // ToDo : Validate ?
    }

    private void makeBooking() {
        System.out.print("Booking's Ref : ");
        String ref = S.nextLine();
        System.out.print("Pet's Name : ");
        String name = S.nextLine();
        Pet pet = surgery.getPetByName(name); // ToDo : Validate ?
        System.out.print("Booking's DateTime [i.e. 03 Oct 23 09:30] : ");
        LocalDateTime when = LocalDateTime.parse(S.nextLine(), DateTimeFormatter.ofPattern("dd MMM yy HH:mm"));
        System.out.print("Booking's Duration [i.e. MINS] : ");
        int duration = Integer.parseInt(S.nextLine());
        surgery.makeBooking(new Booking(ref, pet, when, duration));
    }

    private void getPetsNextBooking() {
        System.out.print("Pet's Name : ");
        String name = S.nextLine();
        Pet pet = surgery.getPetByName(name); // ToDo : Validate ?
        System.out.println(pet.getNextBooking().getWhen().format(DateTimeFormatter.ofPattern("dd MMM yy HH:mm")));
    }
}
